%This function should return the enerfy for the 2D cartesian case

function energy = lc_energy(matrix, K11, K22, K33, deltax, deltay)


Nx = matrix(:,:,1);
Ny = matrix(:,:,2);

[dNxdx, dNxdy] = gradient(Nx, deltax, deltay);
[dNydx, dNydy] = gradient(Ny, deltax, deltay);

%OF single constant
energy = (1/2).*(dNxdx+dNydy).^2.*K11+(1/2).*(dNxdy+(-1).*dNydx).^2.*K33.*( ...
Nx.^2+Ny.^2);


%Q Tensor
%{
energy = K22.*((dNxdy.^2+(-1).*dNxdx.*(dNxdx+2.*dNydy)).*Nx.^2+(-2).*( ...
  dNxdx.*dNxdy+dNydx.*dNydy).*Nx.*Ny+(dNydx.^2+(-2).*dNxdx.*dNydy+( ...
  -1).*dNydy.^2).*Ny.^2)+(1/2).*((4.*dNxdx.^2+4.*dNxdy.*dNydx+ ...
  dNydx.^2+dNydy.^2).*Nx.^2+2.*(dNxdy.*(2.*dNxdx+dNydy)+dNydx.*( ...
  dNxdx+2.*dNydy)).*Nx.*Ny+(dNxdx.^2+dNxdy.^2+4.*dNxdy.*dNydx+4.* ...
  dNydy.^2).*Ny.^2)+(1/2).*K11.*(Nx.^2.*(4.*dNxdx.*dNydy+dNydy.^2+( ...
  -2).*dNxdx.^2.*((-2)+Nx.^2)+(-1).*dNydx.^2.*((-1)+Nx.^2))+2.*Nx.*( ...
  dNxdy.*(dNydy+(-2).*dNxdx.*((-1)+Nx.^2))+dNydx.*((-1).*dNydy.*(( ...
  -2)+Nx.^2)+(-1).*dNxdx.*((-1)+Nx.^2))).*Ny+(dNxdx.^2+(-1).* ...
  dNxdx.^2.*Nx.^2+(-2).*dNxdy.*dNydx.*Nx.^2+(-2).*dNydx.^2.*Nx.^2+ ...
  dNxdy.^2.*(1+(-2).*Nx.^2)+(-1).*dNydy.^2.*((-4)+Nx.^2)+(-2).* ...
  dNxdx.*dNydy.*((-2)+Nx.^2)).*Ny.^2+(-2).*(2.*dNydx.*dNydy+dNxdy.*( ...
  dNxdx+dNydy)).*Nx.*Ny.^3+(-1).*(dNxdy.^2+2.*dNydy.^2).*Ny.^4)+( ...
  1/2).*K33.*((2.*dNxdx.^2+dNydx.^2).*Nx.^4+2.*(2.*dNxdx.*dNxdy+ ...
  dNydx.*(dNxdx+dNydy)).*Nx.^3.*Ny+(dNxdx.^2+2.*dNxdy.^2+2.*dNxdy.* ...
  dNydx+2.*dNydx.^2+2.*dNxdx.*dNydy+dNydy.^2).*Nx.^2.*Ny.^2+2.*(2.* ...
  dNydx.*dNydy+dNxdy.*(dNxdx+dNydy)).*Nx.*Ny.^3+(dNxdy.^2+2.* ...
  dNydy.^2).*Ny.^4);

%}

end